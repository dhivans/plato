name: Build Plato for Kobo (self-package)

on:
  push:
    branches: ["**"]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git cmake pkg-config \
              wget unzip zip tar xz-utils \
              libfreetype6-dev zlib1g-dev libzip-dev \
              libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev libsdl2-mixer-dev

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      # Grab the Kobo cross toolchain & third-party bits Plato expects
      - name: Prepare Kobo toolchain (thirdparty)
        run: |
          # This downloads/caches toolchains & 3rdparty libs used by build.sh
          bash ./download.sh kobo || true

      # Build Plato for Kobo in release mode
      - name: Build for Kobo (release)
        run: bash ./build.sh kobo release

      # Package .adds/plato/ by copying runtime assets + the built binary
      - name: Package .adds/plato
        shell: bash
        run: |
          set -euxo pipefail
          OUT=dist/.adds/plato
          rm -rf dist && mkdir -p "$OUT"

          # Runtime assets from repo
          cp -a css icons fonts keyboard-layouts "$OUT"/
          # Launcher & helper scripts if present
          if [ -f plato.sh ]; then cp plato.sh "$OUT"/; fi
          if [ -d scripts ]; then cp -a scripts "$OUT"/; fi

          # Find the built Kobo binary and drop it in place
          # (look for a 'plato' binary under something like build/*kobo*/release/)
          BIN="$(find . -type f -name plato -path '*kobo*release*' | head -n1)"
          if [ -z "$BIN" ]; then
            echo "Could not locate built Kobo binary named 'plato' under *kobo*/release" >&2
            find . -type f -name plato | sed 's/^/FOUND: /' || true
            exit 1
          fi
          install -m 0755 "$BIN" "$OUT/plato"

          # Zip up in the expected layout (drop-in to device root)
          (cd dist && zip -r plato-kobo.zip .adds)

          # Show contents for sanity
          unzip -l dist/plato-kobo.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: plato-kobo
          path: dist/plato-kobo.zip
