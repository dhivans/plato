name: Build Plato for Kobo (Nickel)

on:
  push:
    branches: ["**"]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git cmake pkg-config \
              wget unzip zip tar xz-utils \
              libfreetype6-dev zlib1g-dev libzip-dev \
              libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev libsdl2-mixer-dev

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Prepare Nickel toolchain
        run: |
          # Platoâ€™s helper script fetches the cross toolchain/3rdparty bits
          bash ./download.sh nickel || true

      - name: Build for Nickel (release)
        run: bash ./build.sh nickel release

      - name: Package .adds/plato
        shell: bash
        run: |
          set -euxo pipefail
          OUT=dist/.adds/plato
          rm -rf dist && mkdir -p "$OUT"

          # Copy runtime assets
          cp -a css icons fonts keyboard-layouts "$OUT"/
          # Launcher script if present
          if [ -f plato.sh ]; then cp plato.sh "$OUT"/; fi
          if [ -d scripts ]; then cp -a scripts "$OUT"/; fi

          # Find the Nickel release binary
          BIN="$(find . -type f -name plato -path '*nickel*release*' | head -n1)"
          if [ -z "$BIN" ]; then
            echo "Could not locate Nickel release binary named 'plato'." >&2
            find . -type f -name plato | sed 's/^/FOUND: /' || true
            exit 1
          fi
          install -m 0755 "$BIN" "$OUT/plato"

          # Zip so it can be dropped on the device root
          (cd dist && zip -r plato-kobo.zip .adds)
          unzip -l dist/plato-kobo.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: plato-kobo
          path: dist/plato-kobo.zip
